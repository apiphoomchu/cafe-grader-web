import*as e from"jquery";var t="default"in e?e.default:e;var o="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var a={};
/*! @preserve
 * bootbox.js
 * version: 6.0.0
 * author: Nick Payne <nick@kurai.co.uk>
 * license: MIT
 * http://bootboxjs.com/
 */(function(e,o){true;a=o(t)})(0,(function init(e,t){let a={};let r="6.0.0";a.VERSION=r;let n={en:{OK:"OK",CANCEL:"Cancel",CONFIRM:"OK"}};let l={dialog:'<div class="bootbox modal" tabindex="-1" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-body"><div class="bootbox-body"></div></div></div></div></div>',header:'<div class="modal-header"><h5 class="modal-title"></h5></div>',footer:'<div class="modal-footer"></div>',closeButton:'<button type="button" class="bootbox-close-button close btn-close" aria-hidden="true" aria-label="Close"></button>',form:'<form class="bootbox-form"></form>',button:'<button type="button" class="btn"></button>',option:'<option value=""></option>',promptMessage:'<div class="bootbox-prompt-message"></div>',inputs:{text:'<input class="bootbox-input bootbox-input-text form-control" autocomplete="off" type="text" />',textarea:'<textarea class="bootbox-input bootbox-input-textarea form-control"></textarea>',email:'<input class="bootbox-input bootbox-input-email form-control" autocomplete="off" type="email" />',select:'<select class="bootbox-input bootbox-input-select form-select"></select>',checkbox:'<div class="form-check checkbox"><label class="form-check-label"><input class="form-check-input bootbox-input bootbox-input-checkbox" type="checkbox" /></label></div>',radio:'<div class="form-check radio"><label class="form-check-label"><input class="form-check-input bootbox-input bootbox-input-radio" type="radio" name="bootbox-radio" /></label></div>',date:'<input class="bootbox-input bootbox-input-date form-control" autocomplete="off" type="date" />',time:'<input class="bootbox-input bootbox-input-time form-control" autocomplete="off" type="time" />',number:'<input class="bootbox-input bootbox-input-number form-control" autocomplete="off" type="number" />',password:'<input class="bootbox-input bootbox-input-password form-control" autocomplete="off" type="password" />',range:'<input class="bootbox-input bootbox-input-range form-control-range" autocomplete="off" type="range" />'}};let i={locale:"en",backdrop:"static",animate:true,className:null,closeButton:true,show:true,container:"body",value:"",inputType:"text",errorMessage:null,swapButtonOrder:false,centerVertical:false,multiple:false,scrollable:false,reusable:false,relatedTarget:null,size:null,id:null};
/**
   * Return all currently registered locales, or a specific locale if "name" is defined
   * @param {string} [name]
   * @returns {(Object|Object[])} An array of the available locale objects, or a single locale object if {name} is not null
   */a.locales=function(e){return e?n[e]:n};
/**
   * Register localized strings for the OK, CONFIRM, and CANCEL buttons
   * @param {string} name - The key used to identify the new locale in the locales array
   * @param {Object} values - An object containing the localized string for each of the OK, CANCEL, and CONFIRM properties of a locale
   * @returns The updated bootbox object
   */a.addLocale=function(t,o){e.each(["OK","CANCEL","CONFIRM"],(function(e,t){if(!o[t])throw new Error('Please supply a translation for "'+t+'"')}));n[t]={OK:o.OK,CANCEL:o.CANCEL,CONFIRM:o.CONFIRM};return a};
/**
   * Remove a previously-registered locale
   * @param {string} name - The key identifying the locale to remove
   * @returns The updated bootbox object
   */a.removeLocale=function(e){if("en"===e)throw new Error('"en" is used as the default and fallback locale and cannot be removed.');delete n[e];return a};
/**
   * Set the default locale
   * @param {string} name - The key identifying the locale to set as the default locale for all future bootbox calls 
   * @returns The updated bootbox object
   */a.setLocale=function(e){return a.setDefaults("locale",e)};
/**
   * Override default value(s) of Bootbox.
   * @returns The updated bootbox object
   */a.setDefaults=function(){let t={};2===arguments.length?t[arguments[0]]=arguments[1]:t=arguments[0];e.extend(i,t);return a};
/**
   * Hides all currently active Bootbox modals
   * @returns The current bootbox object
   */a.hideAll=function(){e(".bootbox").modal("hide");return a};
/**
   * Allows the base init() function to be overridden
   * @param {function} _$ - A function to be called when the bootbox instance is created
   * @returns The current bootbox object
   */a.init=function(t){return init(t||e)};
/**
   * The core dialog helper function, which can be used to create any custom Bootstrap modal. 
   * @param {Object} options - An object used to configure the various properties which define a Bootbox dialog
   * @returns A jQuery object upon which Bootstrap's modal function has been called
   */a.dialog=function(a){if(e.fn.modal===t)throw new Error('"$.fn.modal" is not defined; please double check you have included the Bootstrap JavaScript library. See https://getbootstrap.com/docs/5.1/getting-started/introduction/ for more details.');a=sanitize(a);if(e.fn.modal.Constructor.VERSION){a.fullBootstrapVersion=e.fn.modal.Constructor.VERSION;let t=a.fullBootstrapVersion.indexOf(".");a.bootstrap=a.fullBootstrapVersion.substring(0,t)}else{a.bootstrap="2";a.fullBootstrapVersion="2.3.2";console.warn("Bootbox will *mostly* work with Bootstrap 2, but we do not officially support it. Please upgrade, if possible.")}let r=e(l.dialog);let n=r.find(".modal-dialog");let i=r.find(".modal-body");let s=e(l.header);let u=e(l.footer);let c=a.buttons;let p={onEscape:a.onEscape};i.find(".bootbox-body").html(a.message);if(getKeyLength(a.buttons)>0){each(c,(function(t,o){let a=e(l.button);a.data("bb-handler",t);a.addClass(o.className);switch(t){case"ok":case"confirm":a.addClass("bootbox-accept");break;case"cancel":a.addClass("bootbox-cancel");break}a.html(o.label);o.id&&a.attr({id:o.id});true===o.disabled&&a.prop({disabled:true});u.append(a);p[t]=o.callback}));i.after(u)}true===a.animate&&r.addClass("fade");a.className&&r.addClass(a.className);a.id&&r.attr({id:a.id});if(a.size){a.fullBootstrapVersion.substring(0,3)<"3.1"&&console.warn('"size" requires Bootstrap 3.1.0 or higher. You appear to be using '+a.fullBootstrapVersion+". Please upgrade to use this option.");switch(a.size){case"small":case"sm":n.addClass("modal-sm");break;case"large":case"lg":n.addClass("modal-lg");break;case"extra-large":case"xl":n.addClass("modal-xl");a.fullBootstrapVersion.substring(0,3)<"4.2"&&console.warn('Using size "xl"/"extra-large" requires Bootstrap 4.2.0 or higher. You appear to be using '+a.fullBootstrapVersion+". Please upgrade to use this option.");break}}if(a.scrollable){n.addClass("modal-dialog-scrollable");a.fullBootstrapVersion.substring(0,3)<"4.3"&&console.warn('Using "scrollable" requires Bootstrap 4.3.0 or higher. You appear to be using '+a.fullBootstrapVersion+". Please upgrade to use this option.")}if(a.title||a.closeButton){a.title?s.find(".modal-title").html(a.title):s.addClass("border-0");if(a.closeButton){let t=e(l.closeButton);a.bootstrap<5&&t.html("&times;");a.bootstrap<4?s.prepend(t):s.append(t)}i.before(s)}if(a.centerVertical){n.addClass("modal-dialog-centered");a.fullBootstrapVersion<"4.0.0"&&console.warn('"centerVertical" requires Bootstrap 4.0.0-beta.3 or higher. You appear to be using '+a.fullBootstrapVersion+". Please upgrade to use this option.")}if(!a.reusable){r.one("hide.bs.modal",{dialog:r},unbindModal);r.one("hidden.bs.modal",{dialog:r},destroyModal)}if(a.onHide){if(!e.isFunction(a.onHide))throw new Error('Argument supplied to "onHide" must be a function');r.on("hide.bs.modal",a.onHide)}if(a.onHidden){if(!e.isFunction(a.onHidden))throw new Error('Argument supplied to "onHidden" must be a function');r.on("hidden.bs.modal",a.onHidden)}if(a.onShow){if(!e.isFunction(a.onShow))throw new Error('Argument supplied to "onShow" must be a function');r.on("show.bs.modal",a.onShow)}r.one("shown.bs.modal",{dialog:r},focusPrimaryButton);if(a.onShown){if(!e.isFunction(a.onShown))throw new Error('Argument supplied to "onShown" must be a function');r.on("shown.bs.modal",a.onShown)}if(true===a.backdrop){let e=false;r.on("mousedown",".modal-content",(function(t){t.stopPropagation();e=true}));r.on("click.dismiss.bs.modal",(function(t){e||t.target!==t.currentTarget||r.trigger("escape.close.bb")}))}r.on("escape.close.bb",(function(e){p.onEscape&&processCallback(e,r,p.onEscape)}));r.on("click",".modal-footer button:not(.disabled)",(function(a){let n=e(this||o).data("bb-handler");n!==t&&processCallback(a,r,p[n])}));r.on("click",".bootbox-close-button",(function(e){processCallback(e,r,p.onEscape)}));r.on("keyup",(function(e){27===e.which&&r.trigger("escape.close.bb")}));e(a.container).append(r);r.modal({backdrop:a.backdrop,keyboard:false,show:false});a.show&&r.modal("show",a.relatedTarget);return r};
/**
   * Helper function to simulate the native alert() behavior. **NOTE**: This is non-blocking, so any code that must happen after the alert is dismissed should be placed within the callback function for this alert.
   * @returns  A jQuery object upon which Bootstrap's modal function has been called
   */a.alert=function(){let t;t=mergeDialogOptions("alert",["ok"],["message","callback"],arguments);if(t.callback&&!e.isFunction(t.callback))throw new Error('alert requires the "callback" property to be a function when provided');t.buttons.ok.callback=t.onEscape=function(){return!e.isFunction(t.callback)||t.callback.call(this||o)};return a.dialog(t)};
/**
   * Helper function to simulate the native confirm() behavior. **NOTE**: This is non-blocking, so any code that must happen after the confirm is dismissed should be placed within the callback function for this confirm.
   * @returns A jQuery object upon which Bootstrap's modal function has been called
   */a.confirm=function(){let t;t=mergeDialogOptions("confirm",["cancel","confirm"],["message","callback"],arguments);if(!e.isFunction(t.callback))throw new Error("confirm requires a callback");t.buttons.cancel.callback=t.onEscape=function(){return t.callback.call(this||o,false)};t.buttons.confirm.callback=function(){return t.callback.call(this||o,true)};return a.dialog(t)};
/**
   * Helper function to simulate the native prompt() behavior. **NOTE**: This is non-blocking, so any code that must happen after the prompt is dismissed should be placed within the callback function for this prompt.
   * @returns A jQuery object upon which Bootstrap's modal function has been called
   */a.prompt=function(){let r;let n;let s;let u;let c;let p;s=e(l.form);r=mergeDialogOptions("prompt",["cancel","confirm"],["title","callback"],arguments);r.value||(r.value=i.value);r.inputType||(r.inputType=i.inputType);c=r.show===t?i.show:r.show;r.show=false;r.buttons.cancel.callback=r.onEscape=function(){return r.callback.call(this||o,null)};r.buttons.confirm.callback=function(){let t;if("checkbox"===r.inputType)t=u.find("input:checked").map((function(){return e(this||o).val()})).get();else if("radio"===r.inputType)t=u.find("input:checked").val();else{let a=u[0];r.errorMessage&&a.setCustomValidity("");if(a.checkValidity&&!a.checkValidity()){r.errorMessage&&a.setCustomValidity(r.errorMessage);a.reportValidity&&a.reportValidity();return false}t="select"===r.inputType&&true===r.multiple?u.find("option:selected").map((function(){return e(this||o).val()})).get():u.val()}return r.callback.call(this||o,t)};if(!r.title)throw new Error("prompt requires a title");if(!e.isFunction(r.callback))throw new Error("prompt requires a callback");if(!l.inputs[r.inputType])throw new Error("Invalid prompt type");u=e(l.inputs[r.inputType]);switch(r.inputType){case"text":case"textarea":case"email":case"password":u.val(r.value);r.placeholder&&u.attr("placeholder",r.placeholder);r.pattern&&u.attr("pattern",r.pattern);r.maxlength&&u.attr("maxlength",r.maxlength);r.required&&u.prop({required:true});r.rows&&!isNaN(parseInt(r.rows))&&"textarea"===r.inputType&&u.attr({rows:r.rows});break;case"date":case"time":case"number":case"range":u.val(r.value);r.placeholder&&u.attr("placeholder",r.placeholder);r.pattern?u.attr("pattern",r.pattern):"date"===r.inputType?u.attr("pattern","d{4}-d{2}-d{2}"):"time"===r.inputType&&u.attr("pattern","d{2}:d{2}");r.required&&u.prop({required:true});if("date"!==r.inputType&&r.step){if(!("any"===r.step||!isNaN(r.step)&&parseFloat(r.step)>0))throw new Error('"step" must be a valid positive number or the value "any". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step for more information.');u.attr("step",r.step)}if(minAndMaxAreValid(r.inputType,r.min,r.max)){r.min!==t&&u.attr("min",r.min);r.max!==t&&u.attr("max",r.max)}break;case"select":let o={};p=r.inputOptions||[];if(!e.isArray(p))throw new Error("Please pass an array of input options");if(!p.length)throw new Error('prompt with "inputType" set to "select" requires at least one option');r.required&&u.prop({required:true});r.multiple&&u.prop({multiple:true});each(p,(function(a,r){let n=u;if(r.value===t||r.text===t)throw new Error('each option needs a "value" property and a "text" property');if(r.group){o[r.group]||(o[r.group]=e("<optgroup />").attr("label",r.group));n=o[r.group]}let i=e(l.option);i.attr("value",r.value).text(r.text);n.append(i)}));each(o,(function(e,t){u.append(t)}));u.val(r.value);r.bootstrap<5&&u.removeClass("form-select").addClass("form-control");break;case"checkbox":let a=e.isArray(r.value)?r.value:[r.value];p=r.inputOptions||[];if(!p.length)throw new Error('prompt with "inputType" set to "checkbox" requires at least one option');u=e('<div class="bootbox-checkbox-list"></div>');each(p,(function(o,n){if(n.value===t||n.text===t)throw new Error('each option needs a "value" property and a "text" property');let i=e(l.inputs[r.inputType]);i.find("input").attr("value",n.value);i.find("label").append("\n"+n.text);each(a,(function(e,t){t===n.value&&i.find("input").prop("checked",true)}));u.append(i)}));break;case"radio":if(r.value!==t&&e.isArray(r.value))throw new Error('prompt with "inputType" set to "radio" requires a single, non-array value for "value"');p=r.inputOptions||[];if(!p.length)throw new Error('prompt with "inputType" set to "radio" requires at least one option');u=e('<div class="bootbox-radiobutton-list"></div>');let n=true;each(p,(function(o,a){if(a.value===t||a.text===t)throw new Error('each option needs a "value" property and a "text" property');let i=e(l.inputs[r.inputType]);i.find("input").attr("value",a.value);i.find("label").append("\n"+a.text);if(r.value!==t&&a.value===r.value){i.find("input").prop("checked",true);n=false}u.append(i)}));n&&u.find('input[type="radio"]').first().prop("checked",true);break}s.append(u);s.on("submit",(function(e){e.preventDefault();e.stopPropagation();n.find(".bootbox-accept").trigger("click")}));if(""!==e.trim(r.message)){let t=e(l.promptMessage).html(r.message);s.prepend(t);r.message=s}else r.message=s;n=a.dialog(r);n.off("shown.bs.modal",focusPrimaryButton);n.on("shown.bs.modal",(function(){u.focus()}));true===c&&n.modal("show");return n};function mapArguments(e,t){let o=e.length;let a={};if(o<1||o>2)throw new Error("Invalid argument length");if(2===o||"string"===typeof e[0]){a[t[0]]=e[0];a[t[1]]=e[1]}else a=e[0];return a}function mergeArguments(t,o,a){return e.extend(true,{},t,mapArguments(o,a))}function mergeDialogOptions(e,t,o,a){let r;if(a&&a[0]){r=a[0].locale||i.locale;let e=a[0].swapButtonOrder||i.swapButtonOrder;e&&(t=t.reverse())}let n={className:"bootbox-"+e,buttons:createLabels(t,r)};return validateButtons(mergeArguments(n,a,o),t)}function validateButtons(e,o){let a={};each(o,(function(e,t){a[t]=true}));each(e.buttons,(function(e){if(a[e]===t)throw new Error('button key "'+e+'" is not allowed (options are '+o.join(" ")+")")}));return e}function createLabels(e,t){let o={};for(let a=0,r=e.length;a<r;a++){let r=e[a];let n=r.toLowerCase();let l=r.toUpperCase();o[n]={label:getText(l,t)}}return o}function getText(e,t){let o=n[t];return o?o[e]:n.en[e]}function sanitize(t){let o;let a;if("object"!==typeof t)throw new Error("Please supply an object of options");if(!t.message)throw new Error('"message" option must not be null or an empty string.');t=e.extend({},i,t);t.backdrop?t.backdrop="string"!==typeof t.backdrop||"static"!==t.backdrop.toLowerCase()||"static":t.backdrop=false!==t.backdrop&&0!==t.backdrop&&"static";t.buttons||(t.buttons={});o=t.buttons;a=getKeyLength(o);each(o,(function(r,n,l){e.isFunction(n)&&(n=o[r]={callback:n});if("object"!==e.type(n))throw new Error('button with key "'+r+'" must be an object');n.label||(n.label=r);if(!n.className){let e=false;e=t.swapButtonOrder?0===l:l===a-1;n.className=a<=2&&e?"btn-primary":"btn-secondary btn-default"}}));return t}function getKeyLength(e){return Object.keys(e).length}function each(t,o){let a=0;e.each(t,(function(e,t){o(e,t,a++)}))}function focusPrimaryButton(e){e.data.dialog.find(".bootbox-accept").first().trigger("focus")}function destroyModal(e){e.target===e.data.dialog[0]&&e.data.dialog.remove()}function unbindModal(e){if(e.target===e.data.dialog[0]){e.data.dialog.off("escape.close.bb");e.data.dialog.off("click")}}function processCallback(t,o,a){t.stopPropagation();t.preventDefault();let r=e.isFunction(a)&&false===a.call(o,t);r||o.modal("hide")}function minAndMaxAreValid(e,o,a){let r=false;let n=true;let l=true;if("date"===e)o===t||(n=dateIsValid(o))?a===t||(l=dateIsValid(a))||console.warn('Browsers which natively support the "date" input type expect date values to be of the form "YYYY-MM-DD" (see ISO-8601 https://www.iso.org/iso-8601-date-and-time-format.html). Bootbox does not enforce this rule, but your max value may not be enforced by this browser.'):console.warn('Browsers which natively support the "date" input type expect date values to be of the form "YYYY-MM-DD" (see ISO-8601 https://www.iso.org/iso-8601-date-and-time-format.html). Bootbox does not enforce this rule, but your min value may not be enforced by this browser.');else if("time"===e){if(o!==t&&!(n=timeIsValid(o)))throw new Error('"min" is not a valid time. See https://www.w3.org/TR/2012/WD-html-markup-20120315/datatypes.html#form.data.time for more information.');if(a!==t&&!(l=timeIsValid(a)))throw new Error('"max" is not a valid time. See https://www.w3.org/TR/2012/WD-html-markup-20120315/datatypes.html#form.data.time for more information.')}else{if(o!==t&&isNaN(o)){n=false;throw new Error('"min" must be a valid number. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-min for more information.')}if(a!==t&&isNaN(a)){l=false;throw new Error('"max" must be a valid number. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-max for more information.')}}if(n&&l){if(a<=o)throw new Error('"max" must be greater than "min". See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-max for more information.');r=true}return r}function timeIsValid(e){return/([01][0-9]|2[0-3]):[0-5][0-9]?:[0-5][0-9]/.test(e)}function dateIsValid(e){return/(\d{4})-(\d{2})-(\d{2})/.test(e)}return a}));var r=a;const n=a.VERSION,l=a.locales,i=a.addLocale,s=a.removeLocale,u=a.setLocale,c=a.setDefaults,p=a.hideAll,d=a.init,f=a.dialog,b=a.alert,m=a.confirm,h=a.prompt;export{n as VERSION,i as addLocale,b as alert,m as confirm,r as default,f as dialog,p as hideAll,d as init,l as locales,h as prompt,s as removeLocale,c as setDefaults,u as setLocale};

